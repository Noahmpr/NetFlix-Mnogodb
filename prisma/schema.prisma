// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://amiirhosseinmpr:J0uhVBvUrdJH7YFw@clusternew.ttpcmvt.mongodb.net/new?retryWrites=true&w=majority&appName=ClusterNew"
}


model Account {
  
 id              String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
id              String    @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String     @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  hashedPassword String?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Movie {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  imageString   String
  title         String
  age           Int
  duration      Float
  overview      String
  release       Int
  videoSource   String
  category      String
  youtubeString String
  WatchLists    WatchList[]

  createdAt DateTime @default(now())
}

model WatchList {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId

  movieId String? @db.ObjectId
  Movie   Movie? @relation(fields: [movieId], references: [id])
}